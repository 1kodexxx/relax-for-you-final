---
import Button from "@/components/Button.astro";
import "@styles/contacts.css";
---

<section id="contacts">
  <div class="container grid-2 contacts-grid" data-reveal-group data-stagger="160">
    <!-- Левая карточка с контактами -->
    <div class="card contacts-info" data-animate="contacts-info" data-reveal-item>
      <h2 class="contacts-title">Контакты</h2>
      <p class="contacts-subtitle muted">
        Мурманск, ЦЕНТР<br />
        Ежедневно с 12:00 до 00:00
      </p>

      <ul class="contacts-list">
        <li>
          <strong>Телефон:</strong>
          <a href="tel:+79533025946">+7 (953) 302-59-46</a>
        </li>
        <li>
          <strong>WhatsApp:</strong>
          <a href="https://wa.me/79113322917" target="_blank" rel="noopener noreferrer">
            +7 (911) 332-29-17
          </a>
        </li>
        <li>
          <strong>Telegram:</strong>
          <a href="https://t.me/Relax4YOU51" target="_blank" rel="noopener noreferrer">
            @Relax4YOU51
          </a>
        </li>
        <li>
          <strong>Электронная почта:</strong>
          <a href="mailto:milana.denisovna@list.ru">milana.denisovna@list.ru</a>
        </li>
        <li>
          <strong>Адрес:</strong>
          г. Мурманск, ул. Трудовых резервов 9 и ул. Карла Маркса 6/1
        </li>
      </ul>

      <Button text="Связаться с нами" href="https://wa.me/79113322917" compact />
    </div>

    <!-- Правая карточка с картой -->
    <div class="card contacts-map" data-animate="contacts-map" data-reveal-item>
      <div class="mapbox__inner" id="map">
        <!-- Встроенная карта Яндекс -->
        <script
          type="text/javascript"
          charset="utf-8"
          async
          src="https://api-maps.yandex.ru/services/constructor/1.0/js/?um=constructor%3A7c1cc9b770a54374e6320d0cf73ed645e1cb19286165076569d66d1f2f64d3d2&width=460&height=515&lang=ru_RU&scroll=true"
        ></script>
      </div>
    </div>
  </div>
</section>

<!-- Локальный reveal (ES5, фолбэки) -->
<script is:inline>
  (function () {
    try {
      document.documentElement.classList.add("rfy-armed");
    } catch (e) {}

    var scope = document.getElementById("contacts");
    if (!scope) return;

    if (typeof window.IntersectionObserver !== "function") {
      // fallback — сразу показать
      var instant = scope.querySelectorAll("[data-reveal-item]");
      for (var i = 0; i < instant.length; i++) instant[i].classList.add("in");
      var group = scope.querySelector("[data-reveal-group]");
      if (group) group.classList.add("in");
      return;
    }

    var groups = scope.querySelectorAll("[data-reveal-group]");

    var io = new IntersectionObserver(
      function (entries) {
        for (var e = 0; e < entries.length; e++) {
          var en = entries[e];
          if (!en.isIntersecting) continue;
          var el = en.target;
          var group = el.closest ? el.closest("[data-reveal-group]") : null;
          var items = group ? group.querySelectorAll("[data-reveal-item]") : [];
          var idx = 0;
          for (var k = 0; k < items.length; k++) if (items[k] === el) idx = k;
          var stagger = Number(group ? group.getAttribute("data-stagger") || 140 : 140);
          try {
            el.style.setProperty("--i", idx);
            el.style.setProperty("--stagger", stagger + "ms");
          } catch (err) {}
          el.classList.add("in");
          io.unobserve(el);
        }
      },
      { threshold: 0.12, rootMargin: "-8% 0px" }
    );

    for (var g = 0; g < groups.length; g++) {
      var items = groups[g].querySelectorAll("[data-reveal-item]");
      for (var m = 0; m < items.length; m++) io.observe(items[m]);
    }
  })();
</script>
